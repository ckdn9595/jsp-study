# day04

내장 객체
==> 자주사용하는 클래스중 몇가지는 JSP 안에서 미리 new 를 시켜서
	사용할 수 있도록 준비해 놓은 것이 있다.
	따라서 이것은 new 시킬 필요없이 그냥 필요하면
	사용할 수 있는 클래스를 내장객체라 부른다.
	
	1. out 객체
		PrintWriter 클래스를 미리 new 시켜놓은 내장 객체이다.
		
		즉,
			PrintWriter out = new PrintWriter(??????);
			
		이 클래스의 역할은 클라이언트에게 응답하는 문서를 작성하도록 하는 기능이다.
		<%= %> 과 동일한 기능이다.
		
		주요함수
			write()
			flush()
			
		PrintWriter 는 JSPWriter 클래스로 변환되어서 new 된 경우이다.
		
	참고 ]
		내장객체는 결국 클래스를 사용하는 것이다.
		해당 클래스 안에 원하는 함수가 무엇인지를 파악하는 것이 중요하다.
	
	*
	2. request 객체
		==> 클라이언트의 요청 정보를 관리하는 역할을 하는 내장객체
			즉, 요청한 클라이언트의 IP주소, 요청 내용, 부가정보를 알고 싶은 경우에 사용하는 내장객체이다.
			
			HttpServeltRequest를 이용해서 만들어진 내장객체이다.
			
			주요함수 ]
				getParameter()
				==> 서버측에서 클라이언트가 준 부가정보를 알아내는 함수
					
					형식 ]
						
						String 변수 = request.getParameter(키값);
						
					주의 ]
						부가정보는 오직 문자열(String) 형태로 꺼내올 수 있다.
						
				getParameterValues()
				==> 서버측에서 클라이언트가 준 같은 키값으로 전달한 부가정보들을 모두 알아내는 함수
					
					형식 ]
						String[] 변수 = request.getParameterValues("키값");
						
						예 ]
							체크박스의 경우
							<input type="checkbox" name="XXX" value="val1">
							<input type="checkbox" name="XXX" value="val2">
							<input type="checkbox" name="XXX" value="val3">
							<input type="checkbox" name="XXX" value="val4">
							<input type="checkbox" name="XXX" value="val5">
							
							==> ?XXX=val1&XXX=val2&XXX=val3& ...
							
-------------------------------------------------------------------------------------------------------
클라이언트가 서버에게 요청하는 방법
	
	1. GET
		1) 브라우저의 주소입력란에 직접 입력해서 요청하는 방법
		2) <a>태그를 사용해서 요청하는 방법
			형식 ]
				<a href="주소">내용</a>
		3) 자바스크립트에서 location 객체의 href 속성으로 요청하는 방법
			location.href = '주소';
		4) form 태그의 method 속성값으로 입력해서 요청하는 방법
			<form method="GET" action="주소">
				input 태그들....
			</form>
			
		참고 ]
			get 방식으로 요청할 때 부가정보를 같이 줄수 있다.
			예를 들어 게시판 목록보기를 할 때
			몇 페이지를 보여주세요! 라고 요청할 수 있다.
			
			형식 ]
				<a href="주소?키값=데이터&키값=데이터&...">내용</a>	
			주의 ]
				? = & 전후에 공백이 있으면 절대로 안된다.
				
		참고 ]
			get 방식은 요청 내용이 주소입력란에 표시되기 때문에 보안에 취약한 문제점이 있다.
			
		주의 ]
			파라미터에 한글이 들어가면 서버측에서 받을 수 없는 경우가 발생한다.
			한글이 인코딩이 안되는 경우이다.
			
			해결방법 ]
				1. 해당 문서에서만 해결하는 방법
					해당 문서안에서
					<%
						request.setCharacterEncoding("UTF-8");
					%>	
					
				2. 모든 문서에서 해결하는 방법
					server.xml 파일안에
						
						<Connector> 태그의 마지막부분에
							URIEncoding="UTF-8"
						을 추가한다.
	
	2. POST
		1) form 태그를 이용해서 요청하는 방법
			==> 로그인 폼과 같이 사용자가 필요한 데이터를 
				직접 입력 또는 선택해서 서버에게 전달하는 방식
			
			***
			특징 ]
				반드시 form 태그 안에 입력태그를 만들어야 한다.
				만약 입력태그가 form 태그안에 있지 않으면
				그 내용은 서버에 전달되지 않는다.
				
			***
			특징 ]
				서버에서는 전달되는 데이터를 받아야 하는데...
				이때는 name 속성값이 파라미터의 키값으로 정해지므로
				꺼낼때는 name 속성값으로 꺼내야 한다.
				따라서 입력태그를 만들때는 반드시 name 속성을 기술해줘야 한다.
				
				form의 내용을 전달할 도구를 준비한다.
				이 도구를 우리는 전문요어로 submit도구라고 한다.
				
				제출도구 만드는 방법
				
					1. html에서 만드는 방법
					
					
					2. 자바스크립트로 만드는 방법
					
					참고] form 태그의 중요 속성
					
						1. method 	2. action
					
					참고] 
						post방식은 스트림을 이용해서 서버에 전달하게 되므로
						주소입력란에 내용이 표현이 안된다.
						
					참고]
						POST방식으로 전송한논 데이터의 한글 깨짐을 방지하는 방법
						서버가 필터링을 이용해서 인코딩해줘야한다.
						
						web.xml
							<filter>
							</filter>

-------------------------------------------------------------------------------------------------------
	3. response 객체
		==> 서버가 클라이언트에게 응답하는 정보를 관리하는 내장객체
		
		HttpServletResponse 라는 클래스를 이용해서 만들어진 내장객체
------------------------------------------------------------------------
	4. session
		==>세션을 관리하는 내장객체
		
			HttpSession 이라는 클래스를 이용해서 만들어진 내장 객체
			
	5. application
		==>서버 전체를 관리하는 내장객체
		
			ServletContext라는 클래스를 이용해서 만들어진 내장객체
	
	6. page
		==>해당 문서 자체를 관리하는 내장 객체
			
			PageContext라는 클래스를 이용해서 만들어진 내장객체
--------------------------------------------------------------------------
	내장 객체의 영역
	==> 내장 객체를 이용하면 데이터를 보관하고 사용할 수 있따.
		즉 , 서버 스스로가 필요한 데이터를 보관했다가 사용할 수 있게 된다.
		
		물론 자바에서 변수에 기억해 놓았다가 사용해도 되지만..
		==>자바로 변수를 만들면
			이때는 거의 지역변수로 만들어진다. 따라서 같은 지역(문서)에서만
			사용할 수 밖에 없는 문제점이 생긴다.
			
			좀더 다양한 문서에서 데이터를 공유할 수 있는 기능을 제공하고 있따.
			
		그런데 문제는
			내장객체를 무엇을 이용해서 데이터를 기억했는가에 따라서
			그 데이터를 사용할 수 있는 영역이 달라진다.
			이때 이 영역을 내장객체의 영역이라고 표현한다.
			
			예]
				request.set
				
		1) PageContext
			==> 같은 문서 안에서만 데이터를 사용할 수 있따.
				이것은 거의 사용안함
				변수를 만들어서 사용하는것과 동일하기 때문에
		2) request
			==> 같은 요청을 유지한 문서에서 그 데이터를 사용할 수 있다.
		3) session
			==> 세션이 유지되는 동안에는 문서에서 세션에 기억한 데이터를 사용할 수 있다.
			
		4) application
			==> 같은 서버를 사용하는 문서에서 서버에 기억된 데이터는 사용할 수 있다.
			웹서버는 각각의 클라이언트에 독
			
======================================================================================
애견태그

	JSP는 자바적인 요소를 스크립트 하는 방식으로 만들어지는 언어이다ㅣ.
	Html은 태그를 중심으로 제작하고 자바적인 요소는
	<% %>를 이용해서 처리하므로 조금은 불편하다.
	
	자주사용하는 자바의 기능을 HTML처럼 (태그방식) 사용할 수 있도록 만들어 놓은 보조적인 명령을 말한다.
	
	1.forward 대신하는 액션태그
		형식1]
			<jsp:forward page="응답문서" />
	2. include
			<jsp:include page="???"/>
				- 컴파일된 내용을 합쳐주므로 충돌의 위험이 없다.
					
----------------------------------------------------------------------------------------------

만들어진 서블릿 클래스를 실행하는 방법
==> jsp 문서는 그 문서를 요청하면 실행되지만
	서블릿 클래스는 문서가 아니므로 원칙적으로 요청을 할 수 없당.ㅋ
	*****
	따라서 서블릿 클래스가 실행되도록 요청 등록을 해줘야 한다.
	1.	web.xml 파일에 요청을 등록
		1) 서블릿을 등록하고
		2) 서블릿을 매핑
		
	2. 서블릿 클래스에 요청 등록
		